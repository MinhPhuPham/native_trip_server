[project]
name = "app"
version = "0.1.0"
description = ""
authors = [{ name = "Admin", email = "admin@example.com" }]
requires-python = ">=3.9,<3.13"
dependencies = [
    "uvicorn[standard]>=0.24.0.post1,<0.25",
    "fastapi>=0.109.1,<0.110",
    "python-multipart>=0.0.7,<0.0.8",
    "email-validator>=2.1.0.post1,<3",
    "passlib[bcrypt]>=1.7.4,<2",
    "tenacity>=8.2.3,<9",
    "pydantic>2.0",
    "emails>=0.6,<0.7",
    "gunicorn>=22.0.0,<23",
    "jinja2>=3.1.4,<4",
    "alembic>=1.12.1,<2",
    "httpx>=0.25.1,<0.26",
    "psycopg[binary]>=3.1.13,<4",
    "sqlmodel>=0.0.21,<0.0.22",
    "bcrypt==4.0.1",
    "pydantic-settings>=2.2.1,<3",
    "sentry-sdk[fastapi]>=1.40.6,<2",
    "pyjwt>=2.8.0,<3",
]

[dependency-groups]
dev = [
    "pytest>=7.4.3,<8",
    "mypy>=1.8.0,<2",
    "ruff>=0.2.2,<0.3",
    "pre-commit>=3.6.2,<4",
    "types-passlib>=1.7.7.20240106,<2",
    "coverage>=7.4.3,<8",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
